
import { connectDB } from '@/lib/db';
import CommercialPropertyModel from '@/lib/models/CommercialProperty';
import HostelPropertyModel from '@/lib/models/HostelProperty';
import ResidentialPropertyModel from '@/lib/models/ResidentialProperty';
import PlotPropertyModel from '@/lib/models/PlotProperty';
import { IoIosArrowForward, IoIosCheckmarkCircle } from 'react-icons/io';
import { FiUploadCloud, FiDollarSign, FiMapPin, FiLayers, FiHome, FiTruck, FiShield } from 'react-icons/fi';
import Footer from '../../../components/ui/footer';
import Image from 'next/image';
import placeholderImage from 'assets/placeholder-house.png';

export async function generateMetadata({ params }) {
  return {
    title: 'Property Details',
    description: 'View property listing details',
  };
}

export default async function PropertyDetails({ params }) {
  const id = params.id;

  try {
    await connectDB();

    // Try to find the property in each model sequentially
    let property = await CommercialPropertyModel.findById(id).lean();
    let propertyType = 'Commercial';

    if (!property) {
      property = await ResidentialPropertyModel.findById(id).lean();
      propertyType = 'Residential';
    }

    if (!property) {
      property = await HostelPropertyModel.findById(id).lean();
      propertyType = 'Hostel';
    }

    if (!property) {
      property = await PlotPropertyModel.findById(id).lean();
      propertyType = 'Plot/Land';
    }

    if (!property) {
      return (
        <div className='min-h-screen flex justify-center items-center text-gray-600'>
          Property not found
        </div>
      );
    }

    // Add the determined propertyType to the property object
    property.propertyType = propertyType;

    const {
      uploadedBy,
      advertiseAs,
      pricePerSqFt,
      area,
      roadConnectivity,
      parking,
      lift,
      security,
      address,
      description,
      images,
      createdAt,
      price,
      listingType,
      bedrooms,
      bathrooms,
      furnishingStatus,
      flooringType,
      maintenance,
      possessionDate,
      amenities,
      floors,
      pricePerAcre,
      totalAcres,
      landType,
      title
    } = property;

    const formattedDate = new Date(createdAt).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });

    return (
      <div className="bg-gray-50 min-h-screen">
        {/* Header Section */}
        <div className="bg-yellow-500 py-12 px-4 sm:px-6 lg:px-8 text-white">
          <div className="max-w-7xl mx-auto">
            <div className="flex flex-col md:flex-row justify-between items-start md:items-end">
              <div>
                <h1 className="text-3xl md:text-4xl font-bold mb-2">{propertyType} Property</h1>
                <div className="flex items-center text-yellow-100">
                  <span className="bg-yellow-600 px-3 py-1 rounded-full text-sm font-medium">
                    {advertiseAs || 'Sell'}
                  </span>
                  <span className="mx-2">•</span>
                  <span>{address.split(',')[0]}</span>
                </div>
              </div>
              <div className="mt-4 md:mt-0 bg-yellow-600 hover:bg-yellow-700 px-6 py-3 rounded-lg shadow-lg font-medium transition-transform hover:scale-105 cursor-none">
                {pricePerSqFt ? `₹ ${pricePerSqFt} / Sq Ft.` : 'Price on Request'}
              </div>
            </div>
          </div>
        </div>

        {/* Breadcrumb Navigation */}
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <nav className="flex items-center text-sm text-gray-500 mb-6 space-x-2">
            <span>Home</span>
            <IoIosArrowForward />
            <span>{propertyType}s {listingType}</span>
            <IoIosArrowForward />
            <span>{id}</span>
            <span className="text-gray-700 font-semibold truncate">{title}</span>
          </nav>
        </div>

        {/* Main Content */}
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
            {/* Left Column - Image Gallery */}
            <div className="lg:col-span-2">
              <div className="relative rounded-xl overflow-hidden bg-gray-200 aspect-video">
                <Image
                  src={images || placeholderImage}
                  alt={propertyType}
                  fill
                  className="object-cover"
                  priority
                />
                <div className="absolute bottom-4 left-4 bg-black bg-opacity-50 text-white px-3 py-1 rounded-lg text-sm">
                  Listed on {formattedDate}
                </div>
              </div>

              {/* Property Details */}
              <div className="mt-8 bg-white rounded-xl shadow-md p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4 flex items-center">
                  <FiHome className="mr-2 text-yellow-500" />
                  Property Details
                </h2>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  {/* Price display based on propertyType and listingType */}
                  {(propertyType === 'Residential' || propertyType === 'Commercial' || propertyType === 'Hostel') && (
                    <>
                      {listingType === 'Sell' && price > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiDollarSign className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Total Price</h3>
                            <p className="font-medium">₹{price.toLocaleString('en-IN')}</p>
                          </div>
                        </div>
                      )}
                      {listingType === 'Rent' && price > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiDollarSign className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Rental Price Per Month</h3>
                            <p className="font-medium">₹{price.toLocaleString('en-IN')}</p>
                          </div>
                        </div>
                      )}
                    </>
                  )}

                  {propertyType === 'Plot/Land' && (
                    <>
                      {/* {pricePerSqFt > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiDollarSign className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Price Per Sq Ft.</h3>
                            <p className="font-medium">₹{pricePerSqFt.toLocaleString('en-IN')}</p>
                          </div>
                        </div>
                      )}
                      {area > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiLayers className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Total Area</h3>
                            <p className="font-medium">{area} sq ft</p>
                          </div>
                        </div>
                      )}
                      {pricePerSqFt > 0 && area > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiDollarSign className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Total Price</h3>
                            <p className="font-medium">
                              ₹{(pricePerSqFt * area).toLocaleString('en-IN')}
                            </p>
                          </div>
                        </div>
                      )} */}

                    </>
                  )}


                  {area && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiLayers className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Total Area</h3>
                        <p className="font-medium">{area} sq ft</p>
                      </div>
                    </div>
                  )}

                  {roadConnectivity && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiMapPin className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Road Connectivity</h3>
                        <p className="font-medium">{roadConnectivity}</p>
                      </div>
                    </div>
                  )}
                  {address && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiMapPin className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Address</h3>
                        <p className="font-medium">{address}</p>
                      </div>
                    </div>
                  )}

                  {parking && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiTruck className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Parking</h3>
                        <p className="font-medium">{parking}</p>
                      </div>
                    </div>
                  )}

                  {lift && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiUploadCloud className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Lift Facility</h3>
                        <p className="font-medium">{lift}</p>
                      </div>
                    </div>
                  )}

                  {security && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiShield className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Security</h3>
                        <p className="font-medium">{security}</p>
                      </div>
                    </div>
                  )}

                  {/* Residential Specific Fields */}
                  {(propertyType === 'Residential') && (
                    <>
                    {/* {residentialType && (
                      <div className="flex items-start">
                        <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                          <FiHome className="text-yellow-600" />
                        </div>
                        <div>
                          <h3 className="text-gray-500 text-sm">Residential Type</h3>
                          <p className="font-medium">{residentialType}</p>
                        </div>
                      </div>
                    )} */}

                    {bhkConfig && (
                        <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiShield className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Security</h3>
                        <p className="font-medium">{bhkConfig}</p>
                      </div>
                    </div>
                    )}
                      {bedrooms > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiHome className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Bedrooms</h3>
                            <p className="font-medium">{bedrooms}</p>
                          </div>
                        </div>
                      )}
                      {bathrooms > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiHome className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Bathrooms</h3>
                            <p className="font-medium">{bathrooms}</p>
                          </div>
                        </div>
                      )}
                      {furnishingStatus && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiHome className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Furnishing</h3>
                            <p className="font-medium">{furnishingStatus}</p>
                          </div>
                        </div>
                      )}
                    </>
                  )}

                {/* Hostel Specific Fields */}
                {propertyType === 'Hostel' && (
                  <>
                    {hostelType && (
                      <div className="flex items-start">
                        <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                          <FiHome className="text-yellow-600" />
                        </div>
                        <div>
                          <h3 className="text-gray-500 text-sm">Hostel Type</h3>
                          <p className="font-medium">{hostelType}</p>
                        </div>
                      </div>
                    )}
                    {bedrooms > 0 && (
                      <div className="flex items-start">
                        <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                          <FiHome className="text-yellow-600" />
                        </div>
                        <div>
                          <h3 className="text-gray-500 text-sm">Bedrooms</h3>
                          <p className="font-medium">{bedrooms}</p>
                        </div>
                      </div>
                    )}
                    {bathrooms > 0 && (
                      <div className="flex items-start">
                        <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                          <FiHome className="text-yellow-600" />
                        </div>
                        <div>
                          <h3 className="text-gray-500 text-sm">Bathrooms</h3>
                          <p className="font-medium">{bathrooms}</p>
                        </div>
                      </div>
                    )}
                    {furnishingStatus && (
                      <div className="flex items-start">
                        <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                          <FiHome className="text-yellow-600" />
                        </div>
                        <div>
                          <h3 className="text-gray-500 text-sm">Furnishing</h3>
                          <p className="font-medium">{furnishingStatus}</p>
                        </div>
                      </div>
                    )}
                  </>
                )}

                  {/* Commercial Specific Fields */}
                  {propertyType === 'Commercial' && (
                    <>
                      {floors > 0 && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiLayers className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Floors</h3>
                            <p className="font-medium">{floors}</p>
                          </div>
                        </div>
                      )}
                    {address && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiMapPin className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Address</h3>
                        <p className="font-medium">{address}</p>
                      </div>
                    </div>
                  )}
                  {propertyType && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiHome className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Property Type</h3>
                        <p className="font-medium">{propertyType}</p>
                      </div>
                    </div>
                  )}
                    </>
                  )}

                  {/* Plot/Land Specific Fields */}
                  {propertyType === 'Plot/Land' && (
                    <>
                      {landType && (
                        <div className="flex items-start">
                          <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                            <FiMapPin className="text-yellow-600" />
                          </div>
                          <div>
                            <h3 className="text-gray-500 text-sm">Land Type</h3>
                            <p className="font-medium">{landType}</p>
                          </div>
                        </div>
                      )}
                    </>
                  )}

                  {/* Common Fields */}
                  {maintenance > 0 && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiDollarSign className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Maintenance</h3>
                        <p className="font-medium">₹{maintenance}/sq.ft/month</p>
                      </div>
                    </div>
                  )}

                  {possessionDate && (
                    <div className="flex items-start">
                      <div className="bg-yellow-100 p-2 rounded-lg mr-3">
                        <FiMapPin className="text-yellow-600" />
                      </div>
                      <div>
                        <h3 className="text-gray-500 text-sm">Possession Date</h3>
                        <p className="font-medium">{new Date(possessionDate).toLocaleDateString()}</p>
                      </div>
                    </div>
                  )}
                </div>
              </div>

              {/* Description */}
              <div className="mt-6 bg-white rounded-xl shadow-md p-6">
                <h2 className="text-2xl font-bold text-gray-800 mb-4">Description</h2>
                <p className="text-gray-600 whitespace-pre-line">{description}</p>
              </div>

              {/* Amenities */}
              {amenities && amenities.length > 0 && (
                <div className="mt-6 bg-white rounded-xl shadow-md p-6">
                  <h2 className="text-2xl font-bold text-gray-800 mb-4">Amenities</h2>
                  <ul className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 text-gray-700 list-disc list-inside">
                    {amenities.map((amenity, idx) => (
                      <li key={idx}>{amenity}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>

            {/* Right Column - Owner Info & Features */}
            <div>
              {/* Owner Card */}
              <div className="bg-white rounded-xl shadow-md p-6 sticky top-6">
                <h2 className="text-xl font-bold text-gray-800 mb-4">Listed By</h2>
                <div className="flex items-center mb-4">
                  <div className="bg-yellow-100 w-12 h-12 rounded-full flex items-center justify-center text-yellow-600 font-bold mr-3">
                    {uploadedBy?.name?.charAt(0) || 'U'}
                  </div>
                  <div>
                    <h3 className="font-medium">{uploadedBy?.name || 'Unknown'}</h3>
                    <p className="text-gray-500 text-sm">{uploadedBy?.email || 'No email provided'}</p>
                  </div>
                </div>
                <button className="w-full bg-yellow-500 hover:bg-yellow-600 text-white py-3 rounded-lg font-medium transition-colors">
                  Contact Owner
                </button>
              </div>

              {/* Features */}
              <div className="mt-6 bg-white rounded-xl shadow-md p-6">
                <h2 className="text-xl font-bold text-gray-800 mb-4">Features</h2>
                <ul className="space-y-3">
                  <li className="flex items-center">
                    <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                    <span>Property Type: {propertyType}</span>
                  </li>
                  <li className="flex items-center">
                    <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                    <span>Available for: {advertiseAs || 'Sell'}</span>
                  </li>
                  {roadConnectivity && (
                    <li className="flex items-center">
                      <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                      <span>Road Connectivity: {roadConnectivity}</span>
                    </li>
                  )}
                  {parking && (
                    <li className="flex items-center">
                      <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                      <span>Parking: {parking}</span>
                    </li>
                  )}
                  {lift && (
                    <li className="flex items-center">
                      <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                      <span>Lift Facility: {lift}</span>
                    </li>
                  )}
                  {security && (
                    <li className="flex items-center">
                      <IoIosCheckmarkCircle className="text-yellow-500 mr-2" />
                      <span>Security: {security}</span>
                    </li>
                  )}
                </ul>
              </div>

              {/* Location */}
              <div className="mt-6 bg-white rounded-xl shadow-md p-6">
                <h2 className="text-xl font-bold text-gray-800 mb-4">Location</h2>
                <p className="text-gray-600 mb-4">{address}</p>
                <div className="aspect-video bg-gray-200 rounded-lg overflow-hidden">
                  <div className="w-full h-full flex items-center justify-center text-gray-400">
                    <span>Map View</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <Footer />
      </div>
    );
  } catch (error) {
    console.error('Error fetching property:', error);
    return (
      <div className='min-h-screen flex justify-center items-center text-gray-600'>
        Error loading property details. Please try again later.
      </div>
    );
  }
}
